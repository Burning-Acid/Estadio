/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;



import controllers.EntrenadorJpaController;
import controllers.EquipoPaisJpaController;
import controllers.GolJpaController;
import controllers.JugadorJpaController;
import controllers.PaisJpaController;
import controllers.PartidoJpaController;
import controllers.SillaJpaController;
import controllers.UsuarioJpaController;
import controllers.exceptions.NonexistentEntityException;
import entities.*;
import java.awt.Component;
import java.awt.Event;
import java.awt.Image;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import static java.lang.Long.parseLong;
import static java.lang.Short.parseShort;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.StringTokenizer;
import javax.persistence.EntityManager;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import oracle.net.aso.j;
import sun.awt.image.ByteArrayImageSource;
import sun.awt.image.ToolkitImage;

/**
 *
 * @author david
 */
public class Ventana extends javax.swing.JFrame {

    private Integer recibo;
    private Integer actual;
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        actual = 0;
        initComponents();
        actual = 4;
        jTabbedPane1.setSelectedIndex(4);
        inicializar();
        setResizable(false);
        setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jLabel99 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jButton9 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton26 = new javax.swing.JButton();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel98 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jButton27 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel95 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jButton23 = new javax.swing.JButton();
        jLabel106 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jLabel109 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        jLabel114 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jLabel112 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel115 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        jButton28 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jButton29 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Seleccionar Partido:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(60, 120, 180, 30);

        jLabel2.setText("Partidos");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(146, 274, 39, 14);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(370, 120, 220, 30);

        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(140, 330, 140, 60);

        jButton24.setText("Regresar");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton24);
        jButton24.setBounds(410, 330, 140, 60);

        jLabel99.setFont(new java.awt.Font("Cooper Black", 3, 36)); // NOI18N
        jLabel99.setForeground(new java.awt.Color(255, 255, 255));
        jLabel99.setText("Registrar Encuentro");
        jPanel1.add(jLabel99);
        jLabel99.setBounds(120, 40, 470, 50);
        jPanel1.add(jLabel97);
        jLabel97.setBounds(0, 0, 720, 630);

        jTabbedPane1.addTab("Registrar Encuentro", jPanel1);

        jPanel2.setLayout(null);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Seleccionar Fase");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(320, 160, 190, 22);

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Fase:");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(240, 240, 100, 30);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Octavos de Final", "Cuartos de Final"}));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox4);
        jComboBox4.setBounds(390, 240, 180, 30);

        jButton9.setText("Seleccionar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton9);
        jButton9.setBounds(350, 310, 110, 40);

        jButton25.setText("Regresar");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton25);
        jButton25.setBounds(600, 570, 100, 40);

        jLabel102.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel102.setText("Partidos segunda fase");
        jPanel2.add(jLabel102);
        jLabel102.setBounds(220, 30, 380, 50);
        jPanel2.add(jLabel103);
        jLabel103.setBounds(0, 0, 720, 670);

        jTabbedPane1.addTab("Generar Partidos de II Fase", jPanel2);

        jPanel3.setLayout(null);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Disponibilidad de entradas por partidos, fase de eliminatoria");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(150, 110, 490, 30);

        jLabel15.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel15.setText("Fecha actual");
        jPanel3.add(jLabel15);
        jLabel15.setBounds(230, 270, 140, 22);

        jLabel16.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel16.setText("Hora actual");
        jPanel3.add(jLabel16);
        jLabel16.setBounds(230, 300, 130, 30);

        jButton13.setText("Solicitar Entradas");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton13);
        jButton13.setBounds(250, 580, 180, 50);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Partido", "Fecha", "Estadio", "Ciudad", "Equipos", "Horario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(70, 340, 610, 230);
        jPanel3.add(jLabel18);
        jLabel18.setBounds(173, 75, 0, 0);
        jPanel3.add(jLabel19);
        jLabel19.setBounds(173, 93, 0, 0);

        jButton26.setText("Regresar");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton26);
        jButton26.setBounds(600, 580, 90, 40);

        jLabel87.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel87.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel87.setText("jLabel87");
        jPanel3.add(jLabel87);
        jLabel87.setBounds(390, 270, 201, 17);

        jLabel88.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel88.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel88.setText("jLabel88");
        jPanel3.add(jLabel88);
        jLabel88.setBounds(400, 310, 201, 14);

        jLabel107.setFont(new java.awt.Font("Bookman Old Style", 3, 36)); // NOI18N
        jLabel107.setForeground(new java.awt.Color(255, 255, 255));
        jLabel107.setText("Venta de boletería");
        jPanel3.add(jLabel107);
        jLabel107.setBounds(180, 40, 380, 60);
        jPanel3.add(jLabel108);
        jLabel108.setBounds(0, 0, 720, 650);

        jTabbedPane1.addTab("Venta de Boletería ", jPanel3);

        jPanel4.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Elephant", 3, 36)); // NOI18N
        jLabel3.setText("...Detalles del partido...");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(150, 20, 470, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Detalles de anotaciones");
        jPanel4.add(jLabel4);
        jLabel4.setBounds(110, 360, 240, 40);

        jButton2.setText("Agregar Anotaciones");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2);
        jButton2.setBounds(130, 540, 170, 30);

        jButton3.setText("Regresar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3);
        jButton3.setBounds(530, 540, 100, 30);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable2);

        jPanel4.add(jScrollPane4);
        jScrollPane4.setBounds(160, 120, 452, 110);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipo", "Jugador", "Minuto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.getTableHeader().setReorderingAllowed(false);
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable4MouseReleased(evt);
            }
        });
        jScrollPane8.setViewportView(jTable4);

        jPanel4.add(jScrollPane8);
        jScrollPane8.setBounds(40, 400, 394, 116);

        jLabel89.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(255, 255, 255));
        jLabel89.setText("Marcador:");
        jPanel4.add(jLabel89);
        jLabel89.setBounds(140, 250, 140, 22);

        jLabel90.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel90.setForeground(new java.awt.Color(255, 255, 255));
        jLabel90.setText("jLabel90");
        jPanel4.add(jLabel90);
        jLabel90.setBounds(270, 280, 77, 20);

        jLabel91.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel91.setForeground(new java.awt.Color(255, 255, 255));
        jLabel91.setText("jLabel91");
        jPanel4.add(jLabel91);
        jLabel91.setBounds(270, 312, 77, 22);
        jPanel4.add(jLabel92);
        jLabel92.setBounds(450, 220, 233, 300);

        jLabel93.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel93.setForeground(new java.awt.Color(255, 255, 255));
        jLabel93.setText("jLabel93");
        jPanel4.add(jLabel93);
        jLabel93.setBounds(50, 280, 123, 17);

        jLabel94.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel94.setForeground(new java.awt.Color(255, 255, 255));
        jLabel94.setText("jLabel94");
        jPanel4.add(jLabel94);
        jLabel94.setBounds(50, 320, 123, 20);
        jPanel4.add(jLabel100);
        jLabel100.setBounds(0, -40, 720, 750);

        jTabbedPane1.addTab("Detalles del partido", jPanel4);

        jPanel5.setLayout(null);

        jButton6.setText("Registrar Encuentro");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton6);
        jButton6.setBounds(80, 220, 150, 40);

        jButton7.setText("Generar Partidos de II Fase");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7);
        jButton7.setBounds(50, 310, 210, 40);

        jButton8.setText("Venta de Boleteria");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton8);
        jButton8.setBounds(80, 410, 150, 40);
        jPanel5.add(jLabel98);
        jLabel98.setBounds(0, 0, 720, 670);

        jLabel96.setFont(new java.awt.Font("Bookman Old Style", 3, 48)); // NOI18N
        jLabel96.setText("Mundial Rusia 2018");
        jPanel5.add(jLabel96);
        jLabel96.setBounds(70, 10, 590, 60);

        jButton27.setText("Resumen");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton27);
        jButton27.setBounds(90, 500, 150, 60);

        jTabbedPane1.addTab("Principal", jPanel5);

        jPanel6.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Imprint MT Shadow", 3, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 255, 255));
        jLabel5.setText("Agregar Anotación");
        jPanel6.add(jLabel5);
        jLabel5.setBounds(160, 20, 330, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Número del Partido");
        jPanel6.add(jLabel6);
        jLabel6.setBounds(370, 70, 130, 17);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Equipo");
        jPanel6.add(jLabel7);
        jLabel7.setBounds(450, 110, 50, 17);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBox2);
        jComboBox2.setBounds(540, 110, 150, 20);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Jugador");
        jPanel6.add(jLabel8);
        jLabel8.setBounds(440, 150, 60, 17);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Minuto");
        jPanel6.add(jLabel9);
        jLabel9.setBounds(450, 190, 60, 17);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBox3);
        jComboBox3.setBounds(540, 150, 151, 20);

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        jPanel6.add(jTextField2);
        jTextField2.setBounds(540, 190, 78, 20);

        jButton4.setText("Agregar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton4);
        jButton4.setBounds(600, 290, 80, 40);

        jButton5.setText("Regresar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton5);
        jButton5.setBounds(587, 620, 110, 23);

        jLabel95.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel95.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel95.setText("jLabel95");
        jPanel6.add(jLabel95);
        jLabel95.setBounds(540, 70, 97, 20);
        jPanel6.add(jLabel101);
        jLabel101.setBounds(0, 0, 720, 670);

        jTabbedPane1.addTab("Agregar Anotacion", jPanel6);

        jPanel8.setLayout(null);

        jLabel17.setFont(new java.awt.Font("Monotype Corsiva", 3, 36)); // NOI18N
        jLabel17.setText("Programación");
        jPanel8.add(jLabel17);
        jLabel17.setBounds(240, 30, 260, 50);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Partido", "Fecha", "Estadio", "Ciudad", "Equipos", "Horario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable6.getTableHeader().setReorderingAllowed(false);
        jScrollPane12.setViewportView(jTable6);

        jPanel8.add(jScrollPane12);
        jScrollPane12.setBounds(80, 100, 570, 250);
        jPanel8.add(jLabel20);
        jLabel20.setBounds(152, 65, 0, 0);

        jButton23.setText("Regresar");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton23);
        jButton23.setBounds(510, 450, 110, 50);
        jPanel8.add(jLabel106);
        jLabel106.setBounds(0, 0, 720, 650);

        jTabbedPane1.addTab("Programación", jPanel8);

        jPanel9.setLayout(null);

        jLabel21.setFont(new java.awt.Font("Goudy Old Style", 3, 36)); // NOI18N
        jLabel21.setText("Disponibilidad de entradas por categoria");
        jPanel9.add(jLabel21);
        jLabel21.setBounds(40, 40, 640, 50);

        jLabel22.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Estadio");
        jPanel9.add(jLabel22);
        jLabel22.setBounds(340, 150, 80, 17);

        jLabel23.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Partido");
        jPanel9.add(jLabel23);
        jLabel23.setBounds(340, 180, 60, 17);

        jLabel24.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Entradas disponibles");
        jPanel9.add(jLabel24);
        jLabel24.setBounds(250, 210, 150, 17);

        jLabel25.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("jLabel25");
        jPanel9.add(jLabel25);
        jLabel25.setBounds(530, 150, 150, 17);

        jLabel26.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("jLabel26");
        jPanel9.add(jLabel26);
        jLabel26.setBounds(530, 180, 129, 17);

        jLabel27.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("jLabel27");
        jPanel9.add(jLabel27);
        jLabel27.setBounds(530, 210, 129, 17);

        jButton14.setText("Solicitar entradas en categoria");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton14);
        jButton14.setBounds(190, 510, 250, 50);

        jButton15.setText("Regresar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton15);
        jButton15.setBounds(580, 520, 110, 30);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categoria", "Precio", "Entradas Disponibles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable7.getTableHeader().setReorderingAllowed(false);
        jTable7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable7MouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable7);

        jPanel9.add(jScrollPane3);
        jScrollPane3.setBounds(80, 240, 540, 170);
        jPanel9.add(jLabel109);
        jLabel109.setBounds(0, 120, 720, 380);

        jTabbedPane1.addTab("Disponiblidad de entradas", jPanel9);

        jLabel50.setText("Nombre(s)");

        jLabel52.setText("Apellido(s)");

        jLabel53.setText("Número pasaporte");

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jTextField6.setText(" ");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField7KeyReleased(evt);
            }
        });

        jButton20.setText("Terminar Compra");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Regresar");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel50)
                            .addComponent(jLabel52)
                            .addComponent(jLabel53))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGap(239, 239, 239))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jButton21)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel52)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel53)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton21))
                .addContainerGap(675, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Informacion del Cliente", jPanel12);

        jPanel13.setLayout(null);

        jLabel51.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setText("Cliente");
        jPanel13.add(jLabel51);
        jLabel51.setBounds(40, 30, 100, 30);

        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("Nombres");
        jPanel13.add(jLabel54);
        jLabel54.setBounds(46, 74, 70, 14);

        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setText("Apellidos");
        jPanel13.add(jLabel55);
        jLabel55.setBounds(46, 106, 80, 14);

        jLabel56.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel56.setForeground(new java.awt.Color(255, 255, 255));
        jLabel56.setText("nombres");
        jPanel13.add(jLabel56);
        jLabel56.setBounds(142, 74, 113, 14);

        jLabel57.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel57.setForeground(new java.awt.Color(255, 255, 255));
        jLabel57.setText("apellidos");
        jPanel13.add(jLabel57);
        jLabel57.setBounds(142, 106, 113, 14);

        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setText("Documento");
        jPanel13.add(jLabel58);
        jLabel58.setBounds(46, 138, 80, 14);

        jLabel59.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel59.setForeground(new java.awt.Color(255, 255, 255));
        jLabel59.setText("documento");
        jPanel13.add(jLabel59);
        jLabel59.setBounds(142, 138, 113, 14);

        jLabel60.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(255, 255, 255));
        jLabel60.setText("Partido:");
        jPanel13.add(jLabel60);
        jLabel60.setBounds(440, 30, 100, 30);

        jLabel61.setForeground(new java.awt.Color(255, 255, 255));
        jLabel61.setText("Estadio:");
        jPanel13.add(jLabel61);
        jLabel61.setBounds(430, 70, 80, 14);

        jLabel63.setForeground(new java.awt.Color(255, 255, 255));
        jLabel63.setText("Partido:");
        jPanel13.add(jLabel63);
        jLabel63.setBounds(430, 100, 70, 14);

        jLabel62.setForeground(new java.awt.Color(255, 255, 255));
        jLabel62.setText("Fecha hora");
        jPanel13.add(jLabel62);
        jLabel62.setBounds(430, 130, 80, 14);

        jLabel64.setForeground(new java.awt.Color(255, 255, 255));
        jLabel64.setText("Equipos");
        jPanel13.add(jLabel64);
        jLabel64.setBounds(430, 160, 70, 14);

        jLabel65.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel65.setForeground(new java.awt.Color(255, 255, 255));
        jLabel65.setText("jLabel65");
        jPanel13.add(jLabel65);
        jLabel65.setBounds(530, 70, 150, 14);

        jLabel66.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel66.setForeground(new java.awt.Color(255, 255, 255));
        jLabel66.setText("jLabel66");
        jPanel13.add(jLabel66);
        jLabel66.setBounds(530, 100, 150, 14);

        jLabel67.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel67.setForeground(new java.awt.Color(255, 255, 255));
        jLabel67.setText("jLabel67");
        jPanel13.add(jLabel67);
        jLabel67.setBounds(530, 130, 150, 14);

        jLabel68.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel68.setForeground(new java.awt.Color(255, 255, 255));
        jLabel68.setText("jLabel68");
        jPanel13.add(jLabel68);
        jLabel68.setBounds(530, 160, 150, 14);

        jLabel69.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("Entradas");
        jPanel13.add(jLabel69);
        jLabel69.setBounds(60, 220, 110, 30);

        jLabel70.setForeground(new java.awt.Color(255, 255, 255));
        jLabel70.setText("Numero de:");
        jPanel13.add(jLabel70);
        jLabel70.setBounds(46, 262, 80, 14);

        jLabel71.setForeground(new java.awt.Color(255, 255, 255));
        jLabel71.setText("Categoria:");
        jPanel13.add(jLabel71);
        jLabel71.setBounds(50, 290, 80, 14);

        jLabel72.setForeground(new java.awt.Color(255, 255, 255));
        jLabel72.setText("Sillas:");
        jPanel13.add(jLabel72);
        jLabel72.setBounds(50, 320, 60, 14);

        jLabel73.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel73.setForeground(new java.awt.Color(255, 255, 255));
        jLabel73.setText("jLabel73");
        jPanel13.add(jLabel73);
        jLabel73.setBounds(150, 320, 104, 14);

        jLabel74.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel74.setForeground(new java.awt.Color(255, 255, 255));
        jLabel74.setText("jLabel74");
        jPanel13.add(jLabel74);
        jLabel74.setBounds(150, 290, 104, 14);

        jLabel75.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel75.setForeground(new java.awt.Color(255, 255, 255));
        jLabel75.setText("jLabel75");
        jPanel13.add(jLabel75);
        jLabel75.setBounds(151, 262, 104, 14);

        jLabel76.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(255, 255, 255));
        jLabel76.setText("Pago:");
        jPanel13.add(jLabel76);
        jLabel76.setBounds(460, 210, 80, 30);

        jLabel77.setForeground(new java.awt.Color(255, 255, 255));
        jLabel77.setText("Total a Pagar");
        jPanel13.add(jLabel77);
        jLabel77.setBounds(420, 260, 90, 14);

        jLabel78.setForeground(new java.awt.Color(255, 255, 255));
        jLabel78.setText("Forma de Pago");
        jPanel13.add(jLabel78);
        jLabel78.setBounds(420, 290, 90, 14);

        jLabel79.setForeground(new java.awt.Color(255, 255, 255));
        jLabel79.setText("Recibido");
        jPanel13.add(jLabel79);
        jLabel79.setBounds(420, 310, 60, 14);

        jLabel80.setForeground(new java.awt.Color(255, 255, 255));
        jLabel80.setText("Numero de Factura");
        jPanel13.add(jLabel80);
        jLabel80.setBounds(420, 340, 120, 14);

        jLabel81.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel81.setForeground(new java.awt.Color(255, 255, 255));
        jLabel81.setText("jLabel81");
        jPanel13.add(jLabel81);
        jLabel81.setBounds(540, 260, 138, 14);

        jLabel82.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel82.setForeground(new java.awt.Color(255, 255, 255));
        jLabel82.setText("jLabel82");
        jPanel13.add(jLabel82);
        jLabel82.setBounds(540, 290, 138, 14);

        jLabel83.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel83.setForeground(new java.awt.Color(255, 255, 255));
        jLabel83.setText("jLabel83");
        jPanel13.add(jLabel83);
        jLabel83.setBounds(540, 310, 138, 14);

        jLabel84.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel84.setForeground(new java.awt.Color(255, 255, 255));
        jLabel84.setText("jLabel84");
        jPanel13.add(jLabel84);
        jLabel84.setBounds(540, 340, 138, 14);

        jLabel85.setForeground(new java.awt.Color(255, 255, 255));
        jLabel85.setText("Fecha de Compra");
        jPanel13.add(jLabel85);
        jLabel85.setBounds(420, 370, 100, 14);

        jLabel86.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel86.setForeground(new java.awt.Color(255, 255, 255));
        jLabel86.setText("jLabel86");
        jPanel13.add(jLabel86);
        jLabel86.setBounds(540, 370, 138, 14);

        jButton22.setText("Regresar");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton22);
        jButton22.setBounds(260, 440, 150, 30);
        jPanel13.add(jLabel114);
        jLabel114.setBounds(30, -220, 1030, 890);

        jTabbedPane1.addTab("Confirmación de Compra", jPanel13);

        jPanel7.setLayout(null);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 255));
        jLabel12.setText("Ronda Eliminatoria");
        jPanel7.add(jLabel12);
        jLabel12.setBounds(120, 100, 170, 26);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 204, 255));
        jLabel13.setText("Detalle De Posiciones");
        jPanel7.add(jLabel13);
        jLabel13.setBounds(70, 150, 150, 17);

        jButton10.setText("Generar Partidos Fase");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton10);
        jButton10.setBounds(70, 550, 190, 30);

        jButton11.setText("Eliminar Partidos Fase");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton11);
        jButton11.setBounds(320, 550, 180, 30);

        jButton12.setText("Regresar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton12);
        jButton12.setBounds(590, 550, 90, 30);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Grupo", "Posicion", "Equipo", "PG", "PE", "PP", "Puntos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.getTableHeader().setReorderingAllowed(false);
        jScrollPane10.setViewportView(jTable5);

        jPanel7.add(jScrollPane10);
        jScrollPane10.setBounds(70, 190, 610, 280);

        jLabel104.setFont(new java.awt.Font("Bodoni MT", 3, 36)); // NOI18N
        jLabel104.setForeground(new java.awt.Color(255, 255, 255));
        jLabel104.setText("Posiciones octavos de final");
        jPanel7.add(jLabel104);
        jLabel104.setBounds(140, 30, 500, 40);
        jPanel7.add(jLabel105);
        jLabel105.setBounds(-20, -160, 740, 830);

        jTabbedPane1.addTab("Posiciones", jPanel7);

        jPanel10.setLayout(null);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Estadio:");
        jPanel10.add(jLabel28);
        jLabel28.setBounds(100, 210, 60, 17);

        jLabel29.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("jLabel29");
        jPanel10.add(jLabel29);
        jLabel29.setBounds(230, 210, 155, 17);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Partido:");
        jPanel10.add(jLabel30);
        jLabel30.setBounds(100, 240, 80, 17);

        jLabel31.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("jLabel31");
        jPanel10.add(jLabel31);
        jLabel31.setBounds(230, 240, 155, 14);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Categoria:");
        jPanel10.add(jLabel32);
        jLabel32.setBounds(100, 270, 90, 17);

        jLabel33.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("jLabel33");
        jPanel10.add(jLabel33);
        jLabel33.setBounds(230, 270, 155, 17);

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Disponibles:");
        jPanel10.add(jLabel34);
        jLabel34.setBounds(100, 300, 100, 17);

        jLabel35.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("jLabel35");
        jPanel10.add(jLabel35);
        jLabel35.setBounds(230, 300, 155, 17);

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fila / Silla", "A", "B"
            }
        ) {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        jTable8.getColumnModel().getColumn(1).setCellRenderer(new ConditionalCheckBoxRenderer());
        jTable8.getColumnModel().getColumn(2).setCellRenderer(new ConditionalCheckBoxRenderer());
        jTable8.setColumnSelectionAllowed(true);
        jTable8.getTableHeader().setReorderingAllowed(false);
        jTable8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable8MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable8MouseReleased(evt);
            }
        });
        jScrollPane7.setViewportView(jTable8);
        jTable8.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jPanel10.add(jScrollPane7);
        jScrollPane7.setBounds(90, 330, 560, 140);

        jButton16.setText("Comprar");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton16);
        jButton16.setBounds(290, 490, 130, 50);

        jButton17.setText("Regresar");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton17);
        jButton17.setBounds(600, 560, 90, 30);

        jLabel110.setFont(new java.awt.Font("Goudy Old Style", 3, 36)); // NOI18N
        jLabel110.setText("Selección de sillas");
        jPanel10.add(jLabel110);
        jLabel110.setBounds(210, 50, 300, 70);
        jPanel10.add(jLabel111);
        jLabel111.setBounds(0, -40, 720, 670);

        jTabbedPane1.addTab("Seleccion de Sillas", jPanel10);

        jPanel11.setLayout(null);

        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Estadio:");
        jPanel11.add(jLabel36);
        jLabel36.setBounds(220, 80, 80, 14);

        jLabel37.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("jLabel37");
        jPanel11.add(jLabel37);
        jLabel37.setBounds(390, 80, 79, 14);

        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Partido:");
        jPanel11.add(jLabel38);
        jLabel38.setBounds(220, 100, 70, 14);

        jLabel39.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("jLabel39");
        jPanel11.add(jLabel39);
        jLabel39.setBounds(390, 100, 79, 14);

        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Categoria:");
        jPanel11.add(jLabel40);
        jLabel40.setBounds(220, 120, 80, 14);

        jLabel41.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("jLabel41");
        jPanel11.add(jLabel41);
        jLabel41.setBounds(390, 120, 79, 14);

        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Disponibles");
        jPanel11.add(jLabel42);
        jLabel42.setBounds(220, 140, 80, 14);

        jLabel43.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("jLabel43");
        jPanel11.add(jLabel43);
        jLabel43.setBounds(390, 140, 79, 14);

        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Solicitadas");
        jPanel11.add(jLabel44);
        jLabel44.setBounds(220, 160, 80, 14);

        jLabel45.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("jLabel45");
        jPanel11.add(jLabel45);
        jLabel45.setBounds(390, 160, 79, 14);

        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Sillas Reservadas:");
        jPanel11.add(jLabel46);
        jLabel46.setBounds(100, 190, 87, 14);

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Fila", "Silla"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(jTable9);

        jPanel11.add(jScrollPane13);
        jScrollPane13.setBounds(110, 210, 480, 100);

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Total a pagar:");
        jPanel11.add(jLabel47);
        jLabel47.setBounds(180, 314, 110, 20);

        jLabel48.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("jLabel48");
        jPanel11.add(jLabel48);
        jLabel48.setBounds(380, 320, 172, 17);

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("Seleccione Forma de Pago");
        jPanel11.add(jLabel49);
        jLabel49.setBounds(140, 350, 200, 17);

        jRadioButton1.setText("Efectivo Recibido");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel11.add(jRadioButton1);
        jRadioButton1.setBounds(160, 383, 160, 30);

        jRadioButton2.setText("Tarjeta Credito Numero:");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel11.add(jRadioButton2);
        jRadioButton2.setBounds(160, 433, 160, 30);

        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextField3MousePressed(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });
        jPanel11.add(jTextField3);
        jTextField3.setBounds(360, 380, 200, 30);

        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextField4MousePressed(evt);
            }
        });
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });
        jPanel11.add(jTextField4);
        jTextField4.setBounds(360, 430, 200, 30);

        jButton18.setText("Pagar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton18);
        jButton18.setBounds(190, 490, 200, 30);

        jButton19.setText("Regresar");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton19);
        jButton19.setBounds(460, 490, 100, 23);

        jLabel112.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel112.setForeground(new java.awt.Color(255, 255, 255));
        jLabel112.setText("Información de pago");
        jPanel11.add(jLabel112);
        jLabel112.setBounds(200, 20, 270, 30);
        jPanel11.add(jLabel113);
        jLabel113.setBounds(0, 0, 720, 670);

        jTabbedPane1.addTab("Información de pago", jPanel11);

        jLabel115.setText("Equipos");

        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        jLabel116.setText("jLabel116");

        jLabel117.setText("DT");

        jLabel118.setText("jLabel118");

        jLabel119.setText("AUX");

        jLabel120.setText("jLabel120");

        jLabel121.setText("Partidos");

        jLabel122.setText("Goleadores");

        jButton28.setText("Seleccionar");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Local", "Gol Local ", "Visitante", "Gol Visitante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable3);

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Jugador", "Num Goles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(jTable10);

        jButton29.setText("Regresar");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel115, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel121, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(220, 220, 220)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel116, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel119)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel120))
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel117)
                                    .addGap(86, 86, 86)
                                    .addComponent(jLabel118)))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel122, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel115)
                    .addComponent(jLabel116))
                .addGap(34, 34, 34)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel117)
                        .addComponent(jLabel118)))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel119)
                    .addComponent(jLabel120))
                .addGap(1, 1, 1)
                .addComponent(jButton28)
                .addGap(33, 33, 33)
                .addComponent(jLabel121)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel122)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(328, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(368, 368, 368))
        );

        jTabbedPane1.addTab("Resumen", jPanel14);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        actual = 2;
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jButton1.setEnabled(false);
        jComboBox1.setSelectedIndex(0);
        actual = 0;
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jButton9.setEnabled(false);
        actual = 1;
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        escogerFase();
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        crearTablaEquipos();
        actual = 10;
        jTabbedPane1.setSelectedIndex(10);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        actual = 1;    
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        PartidoJpaController controPartido = new PartidoJpaController();
        List<Partido> partidos = controPartido.findPartidoEntities();
        calcularDisponibilidad(partidos.get(jTable1.getSelectedRow()));
        actual = 7;
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        llenarCampos();
        actual = 5;
        jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        generarOctavos();
        actual = 6;
        jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        jButton13.setEnabled(false);
        actual = 2;
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        int categoria = jTable7.getSelectedRow()+1;
        updateSeleccion(categoria, parseInt(jLabel26.getText()));
        actual = 11;
        jTabbedPane1.setSelectedIndex(11);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        actual = 7;
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        seleccionarTarjeta();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        seleccionarEfectivo();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        actual = 11;
        jTabbedPane1.setSelectedIndex(11);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        updateInformacionPago();
        actual = 12;
        jTabbedPane1.setSelectedIndex(12);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        actual = 12;
        jTabbedPane1.setSelectedIndex(12);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        llenarComprobante();
        actual = 9;
        jTabbedPane1.setSelectedIndex(9);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        vaciarInformacionCliente();
        actual = 8;
        jTabbedPane1.setSelectedIndex(8); //Este debería ir a Informacion Usuario
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        actual = 10;
        jTabbedPane1.setSelectedIndex(10);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jButton1.setEnabled(false);
        jComboBox1.setSelectedIndex(0);
        actual = 0;
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        detallesPartido();
        actual = 3;
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        actual = 4;
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        actual = 4;
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        actual = 4;
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        agregarGol();
        detallesPartido();
        actual = 3;
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        actual = 3;
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        eliminarOctavos();
        actual = 6;
        jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        revisar();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(jTable1.getSelectedRowCount()!=1)
            jButton13.setEnabled(false);
        else
            jButton13.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        if(jTable1.getSelectedRowCount()!=1)
            jButton13.setEnabled(false);
        else
            jButton13.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseReleased

    private void jTable7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable7MouseReleased
        if(jTable7.getSelectedRowCount()!=1 || (int)jTable7.getModel().getValueAt(jTable7.getSelectedRow(), 2)==0)
            jButton14.setEnabled(false);
        else
            jButton14.setEnabled(true);
    }//GEN-LAST:event_jTable7MouseReleased

    private void jTable8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable8MouseClicked

    private void jTable8MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable8MouseReleased
        manejoTabla8();
    }//GEN-LAST:event_jTable8MouseReleased

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        efectivoInsertado();
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        tarjetaInsertada();
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        actual = 2;
        jButton13.setEnabled(false);
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        efectivoInsertado();
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        tarjetaInsertada();
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        comprobarDatos();
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyReleased
        comprobarDatos();
    }//GEN-LAST:event_jTextField6KeyReleased

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jTextField7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyReleased
        comprobarDatos();
    }//GEN-LAST:event_jTextField7KeyReleased

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jugadoresEquipo();
        comprobarGol();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTable4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseReleased
        mostrarFoto();
    }//GEN-LAST:event_jTable4MouseReleased

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        comprobarGol();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        comprobarGol();
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        jTabbedPane1.setSelectedIndex(actual);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jTextField3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MousePressed
        efectivoInsertado();
    }//GEN-LAST:event_jTextField3MousePressed

    private void jTextField4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MousePressed
        tarjetaInsertada();
    }//GEN-LAST:event_jTextField4MousePressed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        resumenEquipo();
        actual = 13;
        jTabbedPane1.setSelectedIndex(13);
        
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        System.out.println("CLIK");
        llenarInfo();
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        actual = 4;
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton29ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables

    private void llenarComprobante()
    {
        //Asumimos que ya hemos hecho la compra
        recibo++;
        //Llenamos los datos del comprador con lo que puso antes
        jLabel56.setText(jTextField5.getText());
        jLabel57.setText(jTextField6.getText());
        jLabel59.setText(jTextField7.getText());

        //Identificamos el partido y el estadio mediante el partido
        PartidoJpaController controPartido = new PartidoJpaController();
        UsuarioJpaController controUsuario = new UsuarioJpaController();
        Partido par = controPartido.findPartido(parseShort(jLabel26.getText()));
        Estadio est = par.getCodEstadio();

        //Ahora hallamos la lista de sillas que reservó el usuario
        SillaJpaController controSilla = new SillaJpaController();
        ArrayList<Silla> sillasCompradas = new ArrayList<>();
        for(int i=0 ; i<jTable9.getRowCount() ; ++i)
        {
            int fila = (Integer)jTable9.getValueAt(i, 0);
            char asiento_aux = (Character)jTable9.getValueAt(i, 1);
            asiento_aux -= 'A'-1;
            int asiento = asiento_aux;
            SillaPK PK = new SillaPK(fila, asiento, par.getNumPartido());
            sillasCompradas.add(controSilla.findSilla(PK));
        }
        //Llenamos los datos del partido para el que compramos las sillas
        DateFormat dia = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        EquipoPais local = par.getCodEquipoLocal();
        EquipoPais visitante = par.getCodEquipoVisitante();
        jLabel65.setText(est.getNombre());
        jLabel66.setText(Short.toString(par.getNumPartido()));
        jLabel67.setText(dia.format(par.getFecha()));
        jLabel68.setText(local.getNombre() + " - " + visitante.getNombre());

        //Llenamos los datos de las sillas compradas
        String sillas = new String();
        sillas = "" + jTable9.getValueAt(0, 0) + jTable9.getValueAt(0, 1);
        for(int i=1 ; i<jTable9.getRowCount() ; ++i)
        {
            sillas+=(", " + jTable9.getValueAt(i, 0) + jTable9.getValueAt(i, 1));
        }
        jLabel75.setText(Integer.toString(sillasCompradas.size()));
        jLabel74.setText("Categoria " + sillasCompradas.get(0).getCategoria());
        jLabel73.setText(sillas);

        //Ahora llenamos la información de pago
        jLabel81.setText(jLabel48.getText());
        String opcionPago = new String();
        String pagado = new String();
        if(jRadioButton1.isSelected())
        {
            opcionPago = "Efectivo";
            pagado = jTextField3.getText();
        }
        else
        {
            opcionPago = "Tarjeta";
            pagado = jLabel48.getText();
        }
        jLabel82.setText(opcionPago);
        jLabel83.setText("$"+pagado);
        jLabel84.setText(recibo.toString());
        jLabel86.setText(dia.format(new Date()));
        EntityManager em = controPartido.getEntityManager();
        em.getTransaction().begin();
        try{
            Usuario us =controUsuario.findUsuario(parseLong(jLabel59.getText()));
            if(null == us)
            {
                PaisJpaController controPais = new PaisJpaController();
                us = new Usuario(parseLong(jLabel59.getText()), jLabel56.getText(), jLabel57.getText(), new Date());
                us.setCodPais(controPais.findPais((short)45));
                us.setSillaList(sillasCompradas);
                controUsuario.create(us);
            }
            else if(us.getSillaList().size()==0)
            {
                us.setSillaList(sillasCompradas);
                controUsuario.edit(us);
            }
            else
            {
                ArrayList<Silla> temporal = new ArrayList<>();
                temporal.addAll(sillasCompradas);
                temporal.addAll(us.getSillaList());
                us.setSillaList(temporal);
                controUsuario.edit(us);
            }
            for(Silla sil: sillasCompradas)
            {
                sil.setEstado("COMPRADO");
                sil.setIdentificacion(us);
                controSilla.edit(sil);
            }
            em.getTransaction().commit();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e, "ERROR", JOptionPane.ERROR_MESSAGE);
            em.getTransaction().rollback();
            actual = 4;
            jTabbedPane1.setSelectedIndex(4);
        }
    }
    
    private void comprobarDatos()
    {
        String nombre = jTextField5.getText().trim();
        String apellido = jTextField6.getText().trim();
        String pasaporte = jTextField7.getText().trim();
        boolean cantDif = true;
        for(int i=0 ; i<pasaporte.length() ; ++i)
        {
            if(pasaporte.charAt(i)<'0' || pasaporte.charAt(i)>'9')
            {
                cantDif=false;
                break;
            }
        }
        if(nombre.length() >=3 && apellido.length() >=3 && pasaporte.length() >=3 && cantDif)
        {
            jButton20.setEnabled(true);
        }
        else
        {
            jButton20.setEnabled(false);
        }
    }
    
    private void efectivoInsertado()
    {
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false);
        String texto = jTextField3.getText();
        jButton18.setEnabled(true);
        for(int i=0 ; i<texto.length() ; ++i)
        {
            if(texto.charAt(i)<'0' || texto.charAt(i)>'9')
            {
                jButton18.setEnabled(false);
                return;
            }
        }
        if(texto.length()==0)
        {
            jButton18.setEnabled(false);
            return;
        }
        String precio = jLabel48.getText();
        precio = precio.substring(1);
        if(parseInt(jTextField3.getText())>=parseInt(precio))
        {
            jButton18.setEnabled(true);
        }
        else
        {
            jButton18.setEnabled(false);
        }
    }
    
    private void tarjetaInsertada()
    {
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(true);
        String texto = jTextField4.getText();
        jButton18.setEnabled(true);
        for(int i=0 ; i<texto.length() ; ++i)
        {
            if(texto.charAt(i)<'0' || texto.charAt(i)>'9')
            {
                jButton18.setEnabled(false);
                return;
            }
        }
        if(jTextField4.getText().length() >= 5)
        {
            jButton18.setEnabled(true);
        }
        else
        {
            jButton18.setEnabled(false);
        }
    }
    
    private void seleccionarEfectivo()
    {
        jRadioButton2.setSelected(false);
        if(!jRadioButton1.isSelected())
        {
            jButton18.setEnabled(false);
            return;
        }
        String texto = jTextField3.getText();
        jButton18.setEnabled(true);
        for(int i=0 ; i<texto.length() ; ++i)
        {
            if(texto.charAt(i)<0 || texto.charAt(i)>9)
            {
                jButton18.setEnabled(false);
            }
        }
        if(texto.length()==0)
        {
            jButton18.setEnabled(false);
            return;
        }
        String precio = jLabel48.getText();
        precio = precio.substring(1);
        if(parseInt(jTextField3.getText())>=parseInt(precio))
        {
            jButton18.setEnabled(true);
        }
        else
        {
            jButton18.setEnabled(false);
        }
    }
    
    private void seleccionarTarjeta()
    {
        jRadioButton1.setSelected(false);
        if(!jRadioButton2.isSelected())
        {
            jButton18.setEnabled(false);
            return;
        }
        String texto = jTextField4.getText();
        jButton18.setEnabled(true);
        for(int i=0 ; i<texto.length() ; ++i)
        {
            if(texto.charAt(i)<0 || texto.charAt(i)>9)
            {
                jButton18.setEnabled(false);
            }
        }
        if(jTextField4.getText().length() >= 5)
        {
            jButton18.setEnabled(true);
        }
        else
        {
            jButton18.setEnabled(false);
        }
    }
    
    private void manejoTabla8()
    {
        if(jTable8.getSelectedRowCount()==1)
        {
            int row = jTable8.getSelectedRow();
            int column = jTable8.getSelectedColumn();
            int valor = (Integer)jTable8.getValueAt(row, column);
            if(valor!=0 && column!=0)
            {
                if(valor==2)
                {
                    jTable8.setValueAt(1, row, column);
                }
                else
                {
                    jTable8.setValueAt(2, row, column);
                }
            }
        }
        int count = 0;
        for(int i=0 ;  i<jTable8.getRowCount() ; ++i)
        {
            for(int j = 1 ; j<jTable8.getColumnCount() ; ++j)
            {
                int valor = (Integer)jTable8.getValueAt(i, j);
                
                if(valor == 2)
                    count++;
            }
        }
        if(count!=0)
        {
            jButton16.setEnabled(true);
        }
        else
        {
            jButton16.setEnabled(false);
        }
    }
    
    private void updateInformacionPago()
    {
        SillaJpaController controSilla = new SillaJpaController();
        int numPartido = parseInt(jLabel31.getText());
        List<Silla> sillas = controSilla.findSillaEntities();
        ArrayList<Silla> sillasReservadas = new ArrayList<>();
        int disponibles = 0;
        for(Silla sil: sillas)
        {
            SillaPK PK = sil.getSillaPK();
            if(PK.getNumPartido() == numPartido)
            {
                int valor = (Integer)jTable8.getValueAt(PK.getNumFila()-1, PK.getNumAsiento());
                if(valor==2)
                {
                    sillasReservadas.add(sil);
                    disponibles++;
                }
                else if(valor==1)
                {
                    disponibles++;
                }
            }
        }
        Partido par = sillasReservadas.get(0).getPartido();
        Estadio est = par.getCodEstadio();
        
        jLabel37.setText(est.getNombre());
        jLabel39.setText(Short.toString(par.getNumPartido()));
        jLabel41.setText("Categoria "+sillasReservadas.get(0).getCategoria());
        jLabel43.setText(Integer.toString(disponibles));
        jLabel45.setText(Integer.toString(sillasReservadas.size()));
        
        DefaultTableModel modelo = (DefaultTableModel) jTable9.getModel();
        while(modelo.getRowCount()!=0)
            modelo.removeRow(0);
        int total = 0;
        for(Silla sil: sillasReservadas)
        {
            SillaPK PK = sil.getSillaPK();
            char asiento = (char)(PK.getNumAsiento()-1);
            asiento+='A';
            modelo.addRow(new Object[]{PK.getNumFila(), asiento});
            total+=sil.getPrecio()*2850;   //Esta es la tasa de conversión de USD a pesos
        }
        jLabel48.setText("$"+total);
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jTextField3.setText("");
        jTextField4.setText("");
        jButton18.setEnabled(false);
    }
    
    private void updateSeleccion(int _categoria, int _partido)
    {
        //Creamos las variables necearias y la lista de sillas totales
        SillaJpaController controSilla = new SillaJpaController();
        List<Silla> sillas = controSilla.findSillaEntities();
        ArrayList<Silla> sillasCategoria = new ArrayList<>();
        PartidoJpaController controPartido = new PartidoJpaController();
        Partido par = controPartido.findPartido( (short)_partido);
        Estadio est = par.getCodEstadio();
        
       //En este for escogemos las sillas que son de este partido y que están disponibles
        for(Silla sil: sillas)
        {
            if(sil.getPartido().getNumPartido() == par.getNumPartido() && sil.getCategoria()==_categoria)
            {
                sillasCategoria.add(sil);
            }
        }
        jLabel29.setText(est.getNombre());
        jLabel31.setText(Short.toString(par.getNumPartido()));
        jLabel33.setText("Categoría " + _categoria);
        jLabel35.setText(Integer.toString(sillasCategoria.size()));
        int fila = _categoria;
        boolean mat[][] = new boolean[4][2];
        for(Silla sil: sillasCategoria)
        {
            mat[sil.getSillaPK().getNumFila()-1][sil.getSillaPK().getNumAsiento()-1] = (sil.getEstado().equals("DISPONIBLE"));
        }
        DefaultTableModel modelo = (DefaultTableModel) jTable8.getModel();
        while(modelo.getRowCount()!=0)
            modelo.removeRow(0);
        for(int i=0 ; i<4 ; ++i)
        {
            Integer s1, s2;
            if(mat[i][0])
                s1 = 1;
            else
                s1 = 0;
            if(mat[i][1])
                s2 = 1;
            else
                s2 = 0;
            modelo.addRow(new Object[]{i+1, s1, s2});
        }
    }
    
    private void calcularDisponibilidad(Partido _partido)
    {
        //Creamos las variables necearias y la lista de sillas totales
        SillaJpaController controSilla = new SillaJpaController();
        Estadio est = _partido.getCodEstadio();
        List<Silla> sillas = controSilla.findSillaEntities();
        ArrayList<Silla> sillasDisponibles = new ArrayList<Silla>();
        
        
       //En este for escogemos las sillas que son de este partido y que están disponibles
        for(Silla sil: sillas)
        {
            if(sil.getPartido().getNumPartido() == _partido.getNumPartido() && sil.getEstado().equals("DISPONIBLE"))
            {
                sillasDisponibles.add(sil);
            }
        }
        
        //Asignamos los valores a las labels 
        jLabel25.setText(est.getNombre());
        jLabel26.setText(Short.toString(_partido.getNumPartido()));
        jLabel27.setText(Integer.toString(sillasDisponibles.size()));
        
        //Ahora llenamos la tabla con los datos de las sillas disponibles
        DefaultTableModel modelo = (DefaultTableModel)jTable7.getModel();
        ArrayList<Integer> lista = new ArrayList<Integer>(4);
        ArrayList<Integer> precios = new ArrayList<Integer>(4);
        for(int i=0 ; i<4 ; ++i)
        {
            lista.add(0);
            precios.add(0);
        }
        for(Silla sil: sillasDisponibles)
        {
            lista.set(sil.getCategoria()-1, lista.get(sil.getCategoria()-1)+1);
            precios.set(sil.getCategoria()-1, sil.getPrecio());
        }     
        while(modelo.getRowCount()!=0)
            modelo.removeRow(0);
        for(int i=0 ; i<4 ; ++i)
        {
            Integer cant = lista.get(i);
            modelo.addRow(new Object[]{i+1, precios.get(i), cant});
        }
        jButton14.setEnabled(false);
    }
    
    private void updateTablaBoleteria()
    {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        PartidoJpaController controPartido = new PartidoJpaController();
        List<Partido> partidos = controPartido.findPartidoEntities();
        DateFormat dia = new SimpleDateFormat("dd/MM/yyyy");
        DateFormat hora = new SimpleDateFormat("HH:mm");
        
        while(modelo.getRowCount()!=0)
        {
            modelo.removeRow(0);
        }
        
        for(int i=0 ; i<partidos.size() ; ++i)
        {
            Partido par = partidos.get(i);
            Date fecha = par.getFecha();
            Estadio est = par.getCodEstadio();
            EquipoPais local = par.getCodEquipoLocal();
            EquipoPais visitante = par.getCodEquipoVisitante();
            if(local.getCodEquipo() <=32 && visitante.getCodEquipo()<=32)
            {
                modelo.addRow(new Object[]{par.getNumPartido(), dia.format(fecha), est.getNombre(), est.getCiudad(), local.getNombre() + " - " + visitante.getNombre(), hora.format(fecha)});
            }
        }
    }
    
    private void actualizarHora()
    {
        DateFormat dia = new SimpleDateFormat("dd/MM/yyyy");
        DateFormat hora = new SimpleDateFormat("HH:mm");
	Date date = new Date();
	jLabel87.setText(dia.format(date));
	jLabel88.setText(hora.format(date));
    }
    
    private void inicializar()
    {
        //jComboBox1.addItem("hola");
        //Actualizar lista de partidos de jComboBox1 en 'Registrar Encuentro'
        
        recibo = 0;
        PartidoJpaController controPartido = new PartidoJpaController();
        List<Partido> partidos = controPartido.findPartidoEntities();
        System.out.println(controPartido.getPartidoCount());
        
        
        for(int i=1 ; i<=partidos.size() ; ++i)
        {
            Partido par = partidos.get(i-1);
            EquipoPais local = par.getCodEquipoLocal();
            EquipoPais visitante = par.getCodEquipoVisitante();
            if(local.getCodEquipo() <=32 && visitante.getCodEquipo()<=32)
            {
                String auxiliar = local.getNombre() + " - " + visitante.getNombre();
                jComboBox1.addItem(auxiliar);
            }
        }
        jButton13.setEnabled(false);
        jButton14.setEnabled(false);
        jButton16.setEnabled(false);
        jButton18.setEnabled(false);
        jButton20.setEnabled(false);
        actualizarHora();
        updateTablaBoleteria();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Ventana view = new Ventana();
    }

    private void revisar() {
        
        if(jComboBox1.getSelectedIndex() > 0 ){
            jButton1.setEnabled(true);
        }else{
            jButton1.setEnabled(false);
        }
    }

    private void detallesPartido() {
        
        String sel = (String) jComboBox1.getSelectedItem();
        String parte[] = sel.split("[.-]");
        //System.out.println("Parte 2 " + parte[0].toString());
        //System.out.println("Parte 3 " + parte[1].toString());
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        DefaultTableModel modelo2 = (DefaultTableModel) jTable4.getModel();
        PartidoJpaController controPartido = new PartidoJpaController();
        List<Partido> partidos = controPartido.findPartidoEntities();
        DateFormat dia = new SimpleDateFormat("dd 'de' MMMM 'de' YYYY");
        DateFormat hora = new SimpleDateFormat("HH:mm");
        Partido par = controPartido.findPartido((short)jComboBox1.getSelectedIndex());
        
        while(modelo.getRowCount() !=0){
            modelo.removeRow(0);
        }
        
        while(modelo2.getRowCount() !=0){
            modelo2.removeRow(0);
        }
        Date fecha = par.getFecha();

        modelo.addRow(new Object [] {"Número partido",par.getNumPartido()});
        modelo.addRow(new Object [] {"Estadio", par.getCodEstadio().getNombre()});
        modelo.addRow(new Object [] {"Fecha" , dia.format(fecha)});
        modelo.addRow(new Object [] {"Hora" , hora.format(fecha)});
        modelo.addRow(new Object [] {"Equipo Local" , parte[0]});
        modelo.addRow(new Object [] {"Equipo Visitante" , parte[1]});

        List<Gol> goles = par.getGolList();

        for(int j=0; j < goles.size(); j++){

            Gol golsito= goles.get(j);
            String equipo = golsito.getJugador().getEquipoPais().getNombre();
            String jugador = golsito.getJugador().getNombres() + " " + golsito.getJugador().getApellidos();
            String minuto = String.valueOf(golsito.getGolPK().getMinuto());
            String EquiTablaL = (String) jTable2.getValueAt(4,1);
            System.out.println("Local " + EquiTablaL);
            String EquiTablaV = (String) jTable2.getValueAt(5,1);
            System.out.println("Visitante " + EquiTablaV);
            System.out.println("Equipo " + equipo);

            modelo2.addRow(new Object [] {equipo,jugador,minuto});
            int filas = modelo2.getRowCount();
            //System.out.println("Filas " + filas);
        }
        
        Integer golLocal = 0;
        Integer golVisit = 0;

        int codE = par.getCodEquipoLocal().getCodEquipo();
        for(Gol gl: goles){

            if(gl.getGolPK().getCodEquipo() == codE){
                golLocal++;
            }
            else
                golVisit++;
        }
        jLabel90.setText(golLocal.toString());
        jLabel91.setText(golVisit.toString()); 
        jLabel93.setText((String)modelo.getValueAt(4, 1));
        jLabel94.setText((String)modelo.getValueAt(5, 1));
    }

    private void llenarCampos() {
        
        PartidoJpaController controPartido = new PartidoJpaController();
        List<Partido> partidos = controPartido.findPartidoEntities();
        String numP = jTable2.getValueAt(0,1).toString();
        //System.out.println("numP" + numP);
        jLabel95.setText(numP);
        jComboBox2.removeAllItems();
        jComboBox2.addItem("Seleccionar");
        
        Partido part = controPartido.findPartido(parseShort(numP));
        String ELocal = part.getCodEquipoLocal().getNombre();
        String EVisitante = part.getCodEquipoVisitante().getNombre();;
            
        jComboBox2.addItem(ELocal);
        jComboBox2.addItem(EVisitante);
        jTextField2.setText("");
 
    }

    private void jugadoresEquipo() {
        
        int equipSel = jComboBox2.getSelectedIndex();
        short numP = parseShort(jLabel95.getText());
        PartidoJpaController controPartido = new PartidoJpaController();
        List<Partido> partidos = controPartido.findPartidoEntities();
        
        Partido par = controPartido.findPartido(numP);
        List<Posicion> posi = par.getPosicionList();
        EquipoPais equipo;
        
        jComboBox3.removeAllItems();
        jComboBox3.addItem("Seleccionar");
        
        if(equipSel == 1){
            equipo = par.getCodEquipoLocal();
        }else{
            equipo = par.getCodEquipoVisitante();
        }
        
        if(jComboBox2.getSelectedIndex() > 0){
            
            for(int i =0; i < posi.size(); i++){
                
                if(equipo.getCodEquipo() == posi.get(i).getJugador().getEquipoPais().getCodEquipo()){
                       jComboBox3.addItem(posi.get(i).getJugador().getNombres() + " " + posi.get(i).getJugador().getApellidos());
                }
            }     
        }
    }

    private void agregarGol() {
                
        PartidoJpaController controPartido = new PartidoJpaController();
        EntityManager em = controPartido.getEntityManager();
        List<Partido> partidos = controPartido.findPartidoEntities();
        EquipoPaisJpaController controEquipoPais = new EquipoPaisJpaController();
        GolJpaController controGol = new GolJpaController();
        List<EquipoPais> equipos = controEquipoPais.findEquipoPaisEntities();
        JugadorJpaController controJugadores = new JugadorJpaController();
        List<Jugador> jugadores = controJugadores.findJugadorEntities();
        String EquiTablaL = (String) jTable2.getValueAt(4,1);
        String EquiTablaV = (String) jTable2.getValueAt(5,1);
        EquipoPais equipo = null; 
        String EquipSacar = jTable2.getValueAt(0, 1).toString();
        System.out.println("EquipSacar " + EquipSacar);
        String jugSel = jComboBox3.getSelectedItem().toString();
        short numJug = 0;
        short numP = parseShort(jLabel95.getText());
        Partido par = controPartido.findPartido((short)numP);
        if(jComboBox2.getSelectedIndex() == 1)
        {
            equipo = par.getCodEquipoLocal();
        }
        else if(jComboBox2.getSelectedIndex() == 2)
        {
            equipo = par.getCodEquipoVisitante();
        }
        
        for(Jugador jug: jugadores){
            String nombreJug = jug.getNombres() + " " + jug.getApellidos();
            
            if(nombreJug.equalsIgnoreCase(jugSel)){
            
                numJug = jug.getJugadorPK().getNumJugador();
            }
        }
        
        if(equipo == null){
            System.out.println("Equipo nulo");
        }
        short codE = equipo.getCodEquipo(); 
        //System.out.println("codE " + codE);
        //System.out.println("AQUI1");
        //System.out.println("numP " + numP);
        //System.out.println("AQUI2");
        String minuto2 = jTextField2.getText().trim();
        //System.out.println("Minuto2" + minuto2);
        //System.out.println("AQUI3");
        short minuto = parseShort(minuto2);
        //System.out.println("minuto " + minuto);
        //System.out.println("AQUI4");
        em.getTransaction().begin();
        try{
            Gol golsito = new Gol(codE,numP,minuto,numJug);
            //System.out.println("Entre los dos");
            golsito.setTipo("cabeza");
            JugadorPK pksito = new JugadorPK(numJug, codE);
            golsito.setJugador((new JugadorJpaController()).findJugador(pksito));
            golsito.setPartido((new PartidoJpaController()).findPartido(numP));
            controGol.create(golsito);
            em.getTransaction().commit();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e, "ERROR", JOptionPane.ERROR_MESSAGE);
            em.getTransaction().rollback();
        }
    }

    private void mostrarFoto(){
        if(jTable4.getSelectedRowCount()!=1)
            return;
        System.out.println("Click");
        JugadorJpaController controJugador = new JugadorJpaController();
        int fil = jTable4.getSelectedRow();
       
        List<Jugador> jugadores = controJugador.findJugadorEntities();
        String nombreJ = (String) this.jTable4.getValueAt(fil, 1);
        for(Jugador j:jugadores)
        {
            String nom = j.getNombres() + " " + j.getApellidos();
            if(nombreJ.equalsIgnoreCase(nom))
            {
                if(j.getFoto() != null)
                {
                    try{
                        Image ima = new ToolkitImage(new ByteArrayImageSource(j.getFoto()));
                        ImageIcon ic = new ImageIcon (ima);
                        jLabel92.setIcon(ic);
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null, e, "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "No hay foto");
                }
            }
        }
    } 
    
    private void comprobarGol()
    {
        jButton4.setEnabled(false);
        if(jComboBox2.getSelectedIndex()<=0 || jComboBox3.getSelectedIndex()<=0)
            return;
        String minuto = jTextField2.getText();
        if(minuto.length()<=0 || minuto.length()>3)
            return;
        for(int i=0 ; i<minuto.length() ; ++i)
        {
            if(minuto.charAt(i)<'0' || minuto.charAt(i)>'9')
            {
                return;
            }
        }
        jButton4.setEnabled(true);
    }

    private void vaciarInformacionCliente() {
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jButton20.setEnabled(false);
    }
    
    private void hacerActualizaciones() throws NonexistentEntityException, Exception{
        PartidoJpaController controPartido = new PartidoJpaController();
        EquipoPaisJpaController equipoContro =  new EquipoPaisJpaController();
        List<EquipoPais> equipos = equipoContro.findEquipoPaisEntities();
        EquipoPais equipoL;
        EquipoPais equipoV;
        DefaultTableModel table = (DefaultTableModel) jTable5.getModel();
        DefaultTableModel table1 = (DefaultTableModel) jTable6.getModel();
        
        for(int j=0;j<table.getRowCount();j++){
            String grupo =(String)table.getValueAt(j, 0);
            String letra;
            StringTokenizer str = new StringTokenizer(grupo);
            str.nextToken();
            letra=str.nextToken();
            int numero=(int) table.getValueAt(j, 1);
            String posicion=Integer.toString(numero)+letra;
            for(int i=0;i<table1.getRowCount();i++){    
                String equiposPartido=(String)table1.getValueAt(i, 4);
                StringTokenizer st = new StringTokenizer(equiposPartido,"-");
                String local = st.nextToken().trim();
                String visitante = st.nextToken().trim();
                equipoL=null;
                if(posicion.toUpperCase().equals(local.toUpperCase())  ){
                    String val = (String)table.getValueAt(j, 2);
                    for(EquipoPais e:equipos){
                        
                        if(val.contains(e.getNombre())){
                            System.out.println(e.getNombre());
                            equipoL=e;
                        }
                    }
                }
                equipoV=null;
                if(posicion.equalsIgnoreCase(visitante)){
                    for(EquipoPais e:equipos){
                        if(e.getNombre().equalsIgnoreCase((String)table.getValueAt(j, 2))){
                            System.out.println(e.getNombre());
                            equipoV=e;
                        }
                    }
                }
                List<Partido> par=controPartido.findPartidoEntities();
                for(int k=0;k<table1.getRowCount();k++){
                    
                    int partido= (int)table1.getValueAt(k, 0);
                    for (int  z=0; z<par.size();z++) {
                        Partido p=new Partido();
                        p=par.get(z);
                        if(p.getNumPartido()>=48 && p.getNumPartido()<57){
                            if(p.getNumPartido()==partido){                                
                                if(Objects.nonNull(equipoL)) {
                                    
                                    
                                    p.setCodEquipoLocal(equipoL);
                                       
                                    controPartido.edit(p);
                                    break;
                                    
                                }
                                if(Objects.nonNull(equipoV)){
                                    
                                        p.setCodEquipoVisitante(equipoV);
                                        controPartido.edit(p);
                                        break;
                                }
                            }
                        }
                    }
                }
            }
        }
        
        
    }
    private void numerarTabla(){
        DefaultTableModel table = (DefaultTableModel) jTable5.getModel();
        for(int i=0;i<table.getRowCount();i++){
            table.setValueAt((i%4)+1, i, 1);
        }
    }    
    private static int calcularPartidosGanados(EquipoPais   e){
        int partidosG=0;
        List<Partido> partidos = e.getPartidoList();
        for(Partido par: partidos){
            if(par.getNumPartido()<=48){
                if(1 == verificarGanado(par, e.getCodEquipo())){
                    partidosG++;
                }
            }
        }
        return partidosG;
    }
    private static Integer verificarGanado(Partido par,int codigo){
        int golesEq=0;
        int golesP=0;
        List<Gol> goles = par.getGolList();
        for(Gol go: goles){
            if(go.getGolPK().getCodEquipo()==codigo){
                golesEq++;
            }
            else{
                golesP++;
            }
        }
        if(golesEq>golesP)
            return 1;
        if(golesEq==golesP)
            return 0;
        else
            return -1;
    }
    private static int calcularPartidosPerdidos(EquipoPais e){
        int partidosP=0;
        List<Partido> partidos = e.getPartidoList();
        for(Partido par: partidos){
            if(par.getNumPartido()<=48){
                if(-1 == verificarGanado(par, e.getCodEquipo())){
                    partidosP++;
                }
            }
        }
        return partidosP;
    }
        private static int calcularPartidosEmpatados(EquipoPais e){
        int partidosE=0;
        List<Partido> partidos = e.getPartidoList();
        for(Partido par: partidos){
            if(par.getNumPartido()<=48){
                if(0 == verificarGanado(par, e.getCodEquipo())){
                    partidosE++;
                }
            }
        }
        return partidosE;
    }

    private void escogerFase() {
            if(jComboBox4.getSelectedIndex()==2){
                jLabel20.setText("Cuartos de Final");
                jButton9.setEnabled(true);
            }
            else if(jComboBox4.getSelectedIndex()==1){
                jLabel20.setText("Octavos de Final");
                jButton9.setEnabled(true);
            }
            else
                jButton9.setEnabled(false);
    }

    private void crearTablaEquipos() {
        EquipoPaisJpaController controEquipo = new EquipoPaisJpaController();
        List<EquipoPais> equipos = controEquipo.findEquipoPaisEntities();
        
        DefaultTableModel modelo = (DefaultTableModel) jTable5.getModel();
        while(modelo.getRowCount()!=0)
            modelo.removeRow(0);
        
        int ganados;
        int empatados;
        int perdidos;
        int puntos;
        
        for(EquipoPais eq: equipos)
        {
            if(eq.getCodEquipo()>32)
                continue;
            ganados = calcularPartidosGanados(eq);
            empatados = calcularPartidosEmpatados(eq);
            perdidos = calcularPartidosPerdidos(eq);
            puntos = (ganados*3) + (empatados*1);
            modelo.addRow(new Object[]{eq.getCodGrupo().getNomGrupo(), (Integer)0, eq.getNombre(), (Integer)ganados, (Integer)empatados, (Integer)perdidos, (Integer)puntos});       
        }
        ordenarTablaPartidos();
        for(int i=0 ; i<modelo.getRowCount() ; ++i)
        {
            modelo.setValueAt((i%4)+1, i, 1);
        }
    }

    private void ordenarTablaPartidos() {
        DefaultTableModel modelo = (DefaultTableModel)jTable5.getModel();
        int maxIndex = 0;
        for(int i=0 ; i<modelo.getRowCount() ; ++i)
        {
            maxIndex = i;
            for(int j=i+1 ; j<modelo.getRowCount() ; ++j)
            {
                String grupoj = modelo.getValueAt(j, 0).toString();
                String grupoMax = modelo.getValueAt(maxIndex, 0).toString();
                int puntosJ = (Integer) modelo.getValueAt(j, 6);
                int puntosMax = (Integer) modelo.getValueAt(maxIndex, 6);
                if(grupoj.charAt(6) < grupoMax.charAt(6))
                {
                    maxIndex = j;
                }
                else if(grupoj.charAt(6)==grupoMax.charAt(6) && puntosJ > puntosMax)
                {
                    maxIndex = j;
                }
            }
            modelo.moveRow(maxIndex, maxIndex, i);
        }
    }

    private void generarOctavos() {
        PartidoJpaController controPartido = new PartidoJpaController();
        List<Partido> partidos = controPartido.findPartidoEntities();
        DateFormat dia = new SimpleDateFormat("dd 'de' MMMM yyyy");
        DateFormat hora = new SimpleDateFormat("HH:mm");
        EquipoPaisJpaController controEquipo = new EquipoPaisJpaController();
        List<EquipoPais> equipos = controEquipo.findEquipoPaisEntities();

        DefaultTableModel modelo = (DefaultTableModel) jTable6.getModel();
        EntityManager em  = controPartido.getEntityManager();
        em.getTransaction().begin();
        eliminarOctavos();
        while(modelo.getRowCount()!=0)
            modelo.removeRow(0);
        try
        {
            for(int i=49 ; i<=56 ; ++i)
            {
                Partido par = controPartido.findPartido((short)i);
                String dummy = par.getCodEquipoLocal().getNombre();
                int index = 0;
                index = (dummy.charAt(1)-'A')*4;
                if(dummy.charAt(0)=='2')
                    index++;
                String nombre = jTable5.getValueAt(index, 2).toString();
                for(EquipoPais eq: equipos)
                {
                    if(eq.getNombre().equals(nombre))
                    {
                        par.setCodEquipoLocal(eq);
                        break;
                    }
                }
                dummy = par.getCodEquipoVisitante().getNombre();
                index = (dummy.charAt(1)-'A')*4;
                if(dummy.charAt(0)=='2')
                    index++;
                nombre = jTable5.getValueAt(index, 2).toString();
                for(EquipoPais eq: equipos)
                {
                    if(eq.getNombre().equals(nombre))
                    {
                        par.setCodEquipoVisitante(eq);
                        break;
                    }
                }
                controPartido.edit(par);
                EquipoPais local = par.getCodEquipoLocal();
                EquipoPais visitante = par.getCodEquipoVisitante();
                modelo.addRow(new Object[]{par.getNumPartido(), dia.format(par.getFecha()), par.getCodEstadio().getNombre(), par.getCodEstadio().getCiudad(),local.getNombre() + " - " + visitante.getNombre(), hora.format(par.getFecha())});
            }
            em.getTransaction().commit();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e, "ERROR", JOptionPane.ERROR_MESSAGE);
            em.getTransaction().rollback();
        }
    }
    
    private void eliminarOctavos()
    {
        PartidoJpaController controPartido = new PartidoJpaController();
        EquipoPaisJpaController controEquipo = new EquipoPaisJpaController();
        EntityManager em = controPartido.getEntityManager();
        DateFormat dia = new SimpleDateFormat("dd 'de' MMMM yyyy");
        DateFormat hora = new SimpleDateFormat("HH:mm");
        Partido par;
        
        DefaultTableModel modelo = (DefaultTableModel) jTable6.getModel();
        while(modelo.getRowCount()!=0)
            modelo.removeRow(0);
        
        em.getTransaction().begin();
        try
        {
            short equipo = 33;
            for(short i=49 ; i<=56 ; ++i)
            {
                par = controPartido.findPartido(i);
                if(par.getCodEquipoLocal().getNombre().length()!=2 || par.getCodEquipoVisitante().getNombre().length()!=2)
                {
                    par.setCodEquipoLocal( controEquipo.findEquipoPais(equipo++) );
                    par.setCodEquipoVisitante( controEquipo.findEquipoPais(equipo++) );
                    System.out.println(par.getCodEquipoLocal().getNombre() + " - " + par.getCodEquipoVisitante().getNombre());
                    controPartido.edit(par);
                }
                Estadio est = par.getCodEstadio();
                EquipoPais local = par.getCodEquipoLocal();
                EquipoPais visitante = par.getCodEquipoVisitante();
                modelo.addRow(new Object[]{par.getNumPartido(), dia.format(par.getFecha()), est.getNombre(), est.getCiudad(), local.getNombre() + " - " + visitante.getNombre(),hora.format(par.getFecha())});
            }
            em.getTransaction().commit();
        }
        catch(Exception e)
        {
            em.getTransaction().rollback();
            JOptionPane.showMessageDialog(null, e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void resumenEquipo() {
        
        EquipoPaisJpaController controEquipoPais = new EquipoPaisJpaController();
        List<EquipoPais> equipos = controEquipoPais.findEquipoPaisEntities();
        jComboBox5.removeAllItems();
        String equipo;
        
        
        for(int i=0; i < equipos.size(); i++){
          
            if(i < 32){
                jComboBox5.addItem(equipos.get(i).getNombre());
            }  
        }      
    }

    private void llenarInfo() {
       
        String nombreEquip = jComboBox5.getSelectedItem().toString();
        System.out.println("Seleccionado " + jComboBox5.getSelectedItem().toString());
        jLabel116.setText(nombreEquip);
        
        EquipoPaisJpaController controEquipoPais = new EquipoPaisJpaController();
        PartidoJpaController controPartido = new PartidoJpaController();
        GolJpaController controGol = new GolJpaController();
        JugadorJpaController controJugador = new JugadorJpaController();
        List<EquipoPais> equipos = controEquipoPais.findEquipoPaisEntities();
        List<Partido> partidosE = controPartido.findPartidoEntities();
        List<Gol> goles = controGol.findGolEntities();
        List<Jugador> jug = controJugador.findJugadorEntities();
        DefaultTableModel modelo = (DefaultTableModel) jTable3.getModel();
        DefaultTableModel modelo2 = (DefaultTableModel) jTable10.getModel();
        String Dt;
        String Aux;
        
        
        for(int i=0; i < equipos.size(); i++){
            
            if(nombreEquip.equalsIgnoreCase(equipos.get(i).getNombre())){
            
                Dt = equipos.get(i).getCodEntrenadorPrincipal().getNombres() + " " + equipos.get(i).getCodEntrenadorPrincipal().getApellidos();
                Aux = equipos.get(i).getCodEntrenadorAuxiliar().getNombres() + "  " + equipos.get(i).getCodEntrenadorAuxiliar().getApellidos();
                jLabel118.setText(Dt);
                jLabel120.setText(Aux);
            }    
        }
        
        for(int j = 0 ; j < partidosE.size(); j++){
        
            if(nombreEquip.equalsIgnoreCase(partidosE.get(j).getCodEquipoLocal().getNombre()) || nombreEquip.equalsIgnoreCase(partidosE.get(j).getCodEquipoVisitante().getNombre())){
               
                String nomLocal = partidosE.get(j).getCodEquipoLocal().getNombre();
                EquipoPais codLocal = partidosE.get(j).getCodEquipoLocal();
                String nomVisi = partidosE.get(j).getCodEquipoVisitante().getNombre();
                EquipoPais codVisi = partidosE.get(j).getCodEquipoVisitante();
                 
                short golLocal = 0;
                short golVisi =0;
                
                goles = partidosE.get(j).getGolList();
                
                for(int k = 0; k < goles.size(); k++){
                
                    if(goles.get(k).getGolPK().getCodEquipo() == codLocal.getCodEquipo()){
                    
                        golLocal ++;  
                    }else if (goles.get(k).getGolPK().getCodEquipo() == codVisi.getCodEquipo()) {
                    
                        golVisi ++;
                    }
                }
                
                modelo.addRow(new Object[]{nomLocal,golLocal,nomVisi,golVisi});
            } 
        }
        
        for(int e = 0 ; e < equipos.size(); e++){

            if(equipos.get(e).getNombre().equalsIgnoreCase(nombreEquip)){
                
                jug = equipos.get(e).getJugadorList();
                
                for(int juga = 0; juga < jug.size(); juga ++){
                     
                    goles = jug.get(juga).getGolList();
                    int tam = goles.size();
                    modelo2.addRow(new Object[]{jug.get(juga).getNombres() + " " + jug.get(juga).getApellidos(),tam});
 
                }
            }
        }
        
        for(int t=1 ; t < modelo2.getRowCount(); t++){
        
            if((Integer) modelo2.getValueAt(t, 1) > (Integer) modelo2.getValueAt(t-1, 1)){
                
                modelo2.moveRow(t, t, t-1);
                
            }
        }
    }
}
